<ribbon:RibbonWindow x:Class="RowThon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
        xmlns:console="clr-namespace:PythonConsoleControl;assembly=PythonConsoleControl"
        xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
		xmlns:data="clr-namespace:RowThon"
        Title="Rowthon"
		x:Name="RibbonWindow"
		Width="1255" Height="785" Loaded="RibbonWindow_Loaded" Closed="RibbonWindow_Closed" xmlns:my="clr-namespace:RowThon">
    <Window.Resources>
        <ResourceDictionary x:Key="dic1" Source="RscDictionary.xaml" />
    </Window.Resources>

	<Window.DataContext>
		<my:WordModel x:Name="ModelData"/>
	</Window.DataContext>

	<Grid x:Name="LayoutRoot">
		<Grid.Resources>
			<!-- RibbonControl -->
			<Style x:Key="RibbonControlStyle">
				<Setter Property="ribbon:RibbonControlService.Label" Value="{Binding Label}" />
				<Setter Property="ribbon:RibbonControlService.LargeImageSource" Value="{Binding LargeImage}" />
				<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{Binding SmallImage}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipTitle" Value="{Binding ToolTipTitle}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipDescription" Value="{Binding ToolTipDescription}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{Binding ToolTipImage}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterTitle" Value="{Binding ToolTipFooterTitle}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipFooterDescription}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{Binding ToolTipFooterImage}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding LargeImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.LargeImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ToolTipImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ToolTipFooterImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{x:Null}" />
					</DataTrigger>
					<Trigger Property="ribbon:RibbonControlService.IsInQuickAccessToolBar" Value="False">
						<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<!-- RibbonGroup -->
			<Style TargetType="{x:Type ribbon:RibbonGroup}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="QuickAccessToolBarId" Value="{Binding Label}" />
				<Setter Property="Header" Value="{Binding Label}" />
			</Style>
			<!-- RibbonButton -->
			<Style TargetType="{x:Type ribbon:RibbonButton}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="Command" Value="{Binding Command}" />
			</Style>
			<!-- RibbonToggleButton -->
			<Style TargetType="{x:Type ribbon:RibbonToggleButton}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			</Style>
			<!-- RibbonRadioButton -->
			<Style TargetType="{x:Type ribbon:RibbonRadioButton}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			</Style>
			<!-- RibbonCheckBox -->
			<Style TargetType="{x:Type ribbon:RibbonCheckBox}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			</Style>
			<!-- RibbonTextBox -->
			<Style TargetType="{x:Type ribbon:RibbonTextBox}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="Text" Value="{Binding Text}" />
			</Style>
			<!-- RibbonMenuButton -->
			<Style TargetType="{x:Type ribbon:RibbonMenuButton}" BasedOn="{StaticResource RibbonControlStyle}">
				<Setter Property="QuickAccessToolBarId" Value="{Binding Command}" />
				<Setter Property="CanUserResizeVertically" Value="{Binding IsVerticallyResizable}" />
				<Setter Property="CanUserResizeHorizontally" Value="{Binding IsHorizontallyResizable}" />
			</Style>
			<!-- RibbonSplitButton -->
			<Style TargetType="{x:Type ribbon:RibbonSplitButton}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuButton}}">
				<Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
				<Setter Property="IsChecked" Value="{Binding IsChecked}" />
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="HeaderQuickAccessToolBarId" Value="{Binding Label}" />
				<Setter Property="DropDownToolTipTitle" Value="{Binding DropDownButtonData.ToolTipTitle}" />
				<Setter Property="DropDownToolTipDescription" Value="{Binding DropDownButtonData.ToolTipDescription}" />
				<Setter Property="DropDownToolTipImageSource" Value="{Binding DropDownButtonData.ToolTipImage}" />
				<Setter Property="DropDownToolTipFooterTitle" Value="{Binding DropDownButtonData.ToolTipFooterTitle}" />
				<Setter Property="DropDownToolTipFooterDescription" Value="{Binding DropDownButtonData.ToolTipFooterDescription}" />
				<Setter Property="DropDownToolTipFooterImageSource" Value="{Binding DropDownButtonData.ToolTipFooterImage}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding DropDownButtonData.ToolTipImage}" Value="{x:Null}">
						<Setter Property="DropDownToolTipImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding DropDownButtonData.ToolTipFooterImage}" Value="{x:Null}">
						<Setter Property="DropDownToolTipFooterImageSource" Value="{x:Null}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<!-- RibbonComboBox -->
			<Style TargetType="{x:Type ribbon:RibbonComboBox}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuButton}}">
				<Setter Property="IsEditable" Value="True" />
				<Setter Property="CanUserResizeVertically" Value="True" />
			</Style>
			
			<!-- RibbonGallery FilterItemContainerStyle -->
			<Style TargetType="{x:Type ribbon:RibbonMenuItem}" x:Key="FilterMenuItemStyle">
				<Setter Property="Header" Value="{Binding Label}" />
			</Style>
			
			<!-- RibbonGalley -->
			<Style TargetType="{x:Type ribbon:RibbonGallery}">
				<Style.Resources>
					<!-- Note that this Style has been specified only to trump the
					     implicit style for RibbonMenuItem from being picked by the
					     items whthin the FilterMenuButton -->
					<Style TargetType="{x:Type ribbon:RibbonMenuItem}" />
				</Style.Resources>
				<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{Binding SmallImage}" />
				<Setter Property="ItemsSource" Value="{Binding CategoryDataCollection}" />
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="SelectedItem" Value="{Binding SelectedItem}" />
				<Setter Property="CanUserFilter" Value="{Binding CanUserFilter}" />
				<Setter Property="FilterItemContainerStyle" Value="{StaticResource FilterMenuItemStyle}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{x:Null}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			
			<!-- RibbonGalleryCategory -->
			<Style TargetType="{x:Type ribbon:RibbonGalleryCategory}">
				<Setter Property="Header" Value="{Binding Label}" />
				<Setter Property="ItemsSource" Value="{Binding GalleryItemDataCollection}" />
			</Style>
			
			<!-- RibbonMenuItem -->
			<Style TargetType="{x:Type ribbon:RibbonMenuItem}">
				<Setter Property="Header" Value="{Binding Label}" />
				<Setter Property="ImageSource" Value="{Binding SmallImage}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipTitle" Value="{Binding ToolTipTitle}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipDescription}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{Binding ToolTipImage}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterTitle" Value="{Binding ToolTipFooterTitle}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipFooterDescription}" />
				<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{Binding ToolTipFooterImage}" />
				<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
				<Setter Property="Command" Value="{Binding Command}" />
				<Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
				<Setter Property="IsChecked" Value="{Binding IsChecked}" />
				<Setter Property="CanUserResizeVertically" Value="{Binding IsVerticallyResizable}" />
				<Setter Property="CanUserResizeHorizontally" Value="{Binding IsHorizontallyResizable}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
						<Setter Property="ImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ToolTipImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ToolTipFooterImage}" Value="{x:Null}">
						<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{x:Null}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<!-- RibbonSplitMenuItem -->
			<Style TargetType="{x:Type ribbon:RibbonSplitMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuItem}}">
				<Setter Property="HeaderQuickAccessToolBarId" Value="{Binding Command}" />
				<Setter Property="QuickAccessToolBarId" Value="{Binding DropDownButtonData.Command}" />
				<Setter Property="HeaderKeyTip" Value="{Binding KeyTip}" />
				<Setter Property="KeyTip" Value="{Binding DropDownButtonData.KeyTip}" />
				<Setter Property="DropDownToolTipTitle" Value="{Binding DropDownButtonData.ToolTipTitle}" />
				<Setter Property="DropDownToolTipDescription" Value="{Binding DropDownButtonData.ToolTipDescription}" />
				<Setter Property="DropDownToolTipImageSource" Value="{Binding DropDownButtonData.ToolTipImage}" />
				<Setter Property="DropDownToolTipFooterTitle" Value="{Binding DropDownButtonData.ToolTipFooterTitle}" />
				<Setter Property="DropDownToolTipFooterDescription" Value="{Binding DropDownButtonData.ToolTipFooterDescription}" />
				<Setter Property="DropDownToolTipFooterImageSource" Value="{Binding DropDownButtonData.ToolTipFooterImage}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding DropDownButtonData.ToolTipImage}" Value="{x:Null}">
						<Setter Property="DropDownToolTipImageSource" Value="{x:Null}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding DropDownButtonData.ToolTipFooterImage}" Value="{x:Null}">
						<Setter Property="DropDownToolTipFooterImageSource" Value="{x:Null}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			
			<!-- RibbonApplicationMenuItem -->
			<Style TargetType="{x:Type ribbon:RibbonApplicationMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuItem}}">
				<Style.Triggers>
					<Trigger Property="Level" Value="Middle">
						<Setter Property="ImageSource" Value="{Binding SmallImage}" />
						<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
						<Setter Property="Command" Value="{Binding Command}" />
						<Setter Property="Header" Value="{Binding}" />
						<Setter Property="HeaderTemplate">
							<Setter.Value>
								<DataTemplate>
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<AccessText Grid.Row="0" FontWeight="Bold" Text="{Binding Label}" />
										<TextBlock Grid.Row="1" Text="{Binding ToolTipTitle}" TextWrapping="Wrap" />
									</Grid>
								</DataTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			
			<!-- RibbonApplicationSplitMenuItem -->
			<Style TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonSplitMenuItem}}" />
			
			<!-- RibbonContextMenu -->
			<Style TargetType="{x:Type ribbon:RibbonContextMenu}">
				<Style.Resources>
					<!-- Note that this Style has been specified only to trump the
					     implicit style foe RibbonMenuItem from being picked by the
					     items within the ContextMenu -->
					<Style TargetType="{x:Type ribbon:RibbonMenuItem}" />
				</Style.Resources>
			</Style>
			
			<!-- RibbonControlGroup -->
			<Style TargetType="{x:Type ribbon:RibbonControlGroup}">
				<Setter Property="Margin" Value="2,0,2,0" />
			</Style>
			
			<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<!-- RibbonContextualTabGroup -->
			<Style TargetType="{x:Type ribbon:RibbonContextualTabGroup}" >
				<Setter Property="Header" Value="{Binding Header}" />
				<Setter Property="Visibility" Value="{Binding IsVisible,Converter={StaticResource BoolToVisibilityConverter}}" />
			</Style>
			
			<!-- RibbonTab -->
			<Style TargetType="{x:Type ribbon:RibbonTab}" x:Key="ContextualTabStyle">
				<Setter Property="ContextualTabGroupHeader" Value="{Binding ContexualTabGroupHeader}" />
				<Setter Property="Header" Value="{Binding Header}" />
				<Setter Property="IsSelected" Value="{Binding IsSelected}" />
			</Style>
			
			
		</Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="454*"/>
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <ribbon:Ribbon x:Name="Ribbon">
            <ribbon:Ribbon.ApplicationMenu>
                <ribbon:RibbonApplicationMenu SmallImageSource="Images\SmallIcon.png">
                    <ribbon:RibbonApplicationMenuItem Header="Rowthon" x:Name="MenuItem1" ImageSource="Images\LargeIcon.png"/>
                </ribbon:RibbonApplicationMenu>
            </ribbon:Ribbon.ApplicationMenu>
            <ribbon:RibbonTab x:Name="Home" Header="ホーム">
                <ribbon:RibbonGroup x:Name="connect" Header="動作情報" >
                    <ribbon:RibbonComboBox Height="23" Label=" ﾓｰﾄﾞ" Width="135" HorizontalAlignment="Right" Name="ctrlMode" CanUserResizeVertically="False" >
                        <ribbon:RibbonGallery SelectionChanged="RibbonGallery_SelectionChanged" Name="ctl">
                            <ribbon:RibbonGalleryCategory Header="動作ﾓｰﾄﾞ">
                                <ribbon:RibbonGalleryItem Content="ﾏﾆｭｱﾙ操作" IsSelected="True"/>
                                <ribbon:RibbonGalleryItem Content="ﾘﾓｰﾄ操作" />
                            </ribbon:RibbonGalleryCategory>
                        </ribbon:RibbonGallery>
                    </ribbon:RibbonComboBox>
					<ribbon:RibbonTextBox x:Name="ConnectStatus" Label="接    続" Text="{Binding Path=ConnectionMsg}" IsReadOnly="True" HorizontalContentAlignment="Right" Background="{Binding Path=ConnectionBackGround}" />
                </ribbon:RibbonGroup>

				<ribbon:RibbonGroup x:Name="Clipboard" DataContext="{x:Static data:WordModel.Clipboard}">
					<ribbon:RibbonSplitButton DataContext="{x:Static data:WordModel.Paste2}">
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.Paste2}" />
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.PasteSpecial}" />
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.PasteAsHyperlink}" />
					</ribbon:RibbonSplitButton>

					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.Cut}" />
					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.Copy}" />
					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.FormatPainter}" />
					
				</ribbon:RibbonGroup>
				
				<!-- テスト -->
				<ribbon:RibbonGroup x:Name="styles" DataContext="{x:Static data:WordModel.Styles}">
					<ribbon:RibbonMenuButton DataContext="{x:Static data:WordModel.ChangeStyles}">
						<!-- -->
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.StylesSet}">
							<ribbon:RibbonGallery DataContext="{x:Static data:WordModel.StylesSetGalleryData}" MaxColumnCount="1">
								<ribbon:RibbonGallery.Resources>
									<DataTemplate DataType="{x:Type data:StylesSet}">
										<StackPanel Orientation="Horizontal">
											<Path x:Name="CheckMark"
												  Visibility="Hidden"
												  Margin="4,0,6,0"
												  VerticalAlignment="Center"
												  HorizontalAlignment="Center"
												  Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
												  FlowDirection="LeftToRight"
												  Data="M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z" />
											<TextBlock Text="{Binding Label}" />
										</StackPanel>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding IsSelected}" Value="True">
												<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
									
								</ribbon:RibbonGallery.Resources>
								
								<ribbon:RibbonGallery.GalleryItemStyle>
									<Style TargetType="ribbon:RibbonGalleryItem">
										<Setter Property="IsSelected" Value="{Binding IsSelected}" />
									</Style>
								</ribbon:RibbonGallery.GalleryItemStyle>
							</ribbon:RibbonGallery>
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.ResetToQuickStylesFromTemplate}" />
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.ResetDocumentQuickStyles}" />
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.SaveAsQuickStyleSet}" />
						</ribbon:RibbonMenuItem>
						
						<!-- -->
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.Colors}" DropDownHeight="470">
							<ribbon:RibbonGallery DataContext="{x:Static data:WordModel.StylesColorsGalleryData}" MaxColumnCount="1">
								<ribbon:RibbonGallery.GalleryItemTemplate>
									<DataTemplate>
										<StackPanel Orientation="Horizontal">
											<Image Source="Images\ColorPalette.png" />
											<Image Source="Images\ColorPalette.png" />
											<Image Source="Images\ColorPalette.png" />
											<TextBlock Margin="10,0,0,0" Text="{Binding}" />
										</StackPanel>
									</DataTemplate>
								</ribbon:RibbonGallery.GalleryItemTemplate>
							</ribbon:RibbonGallery>
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.CreateNewThemeColors}" />
						</ribbon:RibbonMenuItem>
						
						<!-- -->
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.Fonts}" DropDownHeight="700">
							<ribbon:RibbonGallery DataContext="{x:Static data:WordModel.StylesFontsGalleryData}" MaxColumnCount="1">
								<ribbon:RibbonGallery.GalleryItemTemplate>
									<DataTemplate DataType="data:WordModel.ThemeFonts">
										<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>

											<Border BorderThickness="1" BorderBrush="Black">
												<Image Source="{Binding Field1}" />
											</Border>
											<StackPanel Grid.Column="1" Margin="15,0,0,0">
												<TextBlock Text="{Binding Label}" FontFamily="Verdana" FontWeight="Bold" FontSize="10" />
												<TextBlock Text="{Binding Field2}" FontFamily="{Binding Field2}" FontSize="15" />
												<TextBlock Text="{Binding Field3}" FontFamily="{Binding Field3}" FontSize="10" />
											</StackPanel>
										</Grid>
									</DataTemplate>
								</ribbon:RibbonGallery.GalleryItemTemplate>
							</ribbon:RibbonGallery>
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.CreateNewThemeFonts}" />
						</ribbon:RibbonMenuItem>
						
						<!-- -->
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.ParagraphSpacing}">
							<ribbon:RibbonGallery DataContext="{x:Static data:WordModel.StylesParagraphGalleryData}"
												  ItemsSource="{Binding CategoryDataCollection}"
												  ScrollViewer.VerticalScrollBarVisibility="Hidden">
								<ribbon:RibbonGallery.CategoryTemplate>
									<HierarchicalDataTemplate ItemsSource="{Binding GalleryItemDataCollection}">
										<Border Background="LightGray">
											<TextBlock Text="{Binding}" FontWeight="Bold" />
										</Border>
										<HierarchicalDataTemplate.ItemTemplate>
											<DataTemplate>
												<StackPanel Orientation="Horizontal">
													<Image Source="Images\Paragraph_32x32.png" />
													<TextBlock Margin="10,0,0,0" Text="{Binding}" />
												</StackPanel>
											</DataTemplate>
										</HierarchicalDataTemplate.ItemTemplate>
									</HierarchicalDataTemplate>
								</ribbon:RibbonGallery.CategoryTemplate>
							</ribbon:RibbonGallery>
							<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.CustomParagraphSpacing}" />
						</ribbon:RibbonMenuItem>
						
						<ribbon:RibbonSeparator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}" />
						<ribbon:RibbonMenuItem DataContext="{x:Static data:WordModel.SetAsDefault}" />
						
					</ribbon:RibbonMenuButton>
					
				</ribbon:RibbonGroup>
				<!-- ここまで -->
				
            </ribbon:RibbonTab>
            <ribbon:RibbonTab x:Name="ServoTab" Header="サーボ">
                <ribbon:RibbonGroup x:Name="PowGrp" Header="制御">
					<ribbon:RibbonToggleButton x:Name="svPow" SmallImageSource="Images/SmallIcon.png" Label="制御電源" Command="{Binding Path=CmdServoPower}" CommandParameter="{Binding ElementName=svPow, Path=IsChecked}" IsChecked="{Binding Path=SvPowStat}"/>
					<ribbon:RibbonButton x:Name="ServoReset" SmallImageSource="Images/SmallIcon.png" Label="ﾘｾｯﾄ" Command="{Binding Path=CmdServoReset}"/>
					<ribbon:RibbonButton x:Name="ServoErrClr" SmallImageSource="Images/SmallIcon.png" Label="ｴﾗｰｸﾘｱ" Command="{Binding Path=CmdServoErrClr}"/>
					<ribbon:RibbonButton x:Name="SverrInfo" Label="ｴﾗｰ情報" SmallImageSource="Images\errInfo.png" Command="{Binding Path=CmdServoErrInfo}"/>
				</ribbon:RibbonGroup>
                <ribbon:RibbonGroup x:Name="JogGrp" Header="JOG操作">
					<ribbon:RibbonButton Label="X+" Name="BtPlusX" LargeImageSource="Images\PlusLarge.png"   ClickMode="Hover" MouseDown="BtPlusX_MouseDown" MouseUp="BtPlusX_MouseUp"  />
					<ribbon:RibbonButton Label="X-" Name="BtMinusX" LargeImageSource="Images\MinusLarge.png" ClickMode="Hover" MouseDown="BtMinusX_MouseDown" MouseUp="BtMinusX_MouseUp" />
					<ribbon:RibbonButton Label="Y+" Name="BtPlusY" LargeImageSource="Images\PlusLarge.png"   ClickMode="Hover" MouseDown="BtPlusY_MouseDown"  MouseUp="BtPlusY_MouseUp"  />
					<ribbon:RibbonButton Label="Y-" Name="BtMinusY" LargeImageSource="Images\MinusLarge.png" ClickMode="Hover" MouseDown="BtMinusY_MouseDown" MouseUp="BtMinusY_MouseUp" />
					<ribbon:RibbonButton Label="Z+" Name="BtPlusZ" LargeImageSource="Images\PlusLarge.png"   ClickMode="Hover" MouseDown="BtPlusZ_MouseDown"  MouseUp="BtPlusZ_MouseUp"  />
					<ribbon:RibbonButton Label="Z-" Name="BtMinusZ" LargeImageSource="Images\MinusLarge.png" ClickMode="Hover" MouseDown="BtMinusZ_MouseDown" MouseUp="BtMinusZ_MouseUp" />
					<ribbon:RibbonButton Label="L+" Name="BtPlusA" LargeImageSource="Images\PlusLarge.png"   ClickMode="Hover" MouseDown="BtPlusA_MouseDown"  MouseUp="BtPlusA_MouseUp"  />
					<ribbon:RibbonButton Label="L-" Name="BtMinusA" LargeImageSource="Images\MinusLarge.png" ClickMode="Hover" MouseDown="BtMinusA_MouseDown" MouseUp="BtMinusA_MouseUp" />
					<ribbon:RibbonButton Label="Q+" Name="BtPlusB" LargeImageSource="Images\PlusLarge.png"   ClickMode="Hover" MouseDown="BtPlusB_MouseDown"  MouseUp="BtPlusB_MouseUp"  />
					<ribbon:RibbonButton Label="Q-" Name="BtMinusB" LargeImageSource="Images\MinusLarge.png" ClickMode="Hover" MouseDown="BtMinusB_MouseDown" MouseUp="BtMinusB_MouseUp" />
					<ribbon:RibbonTextBox Name="JogSpd" Label="JOG速度" HorizontalContentAlignment="Right" FontWeight="Medium" FontSize="13" Text="600000"/>
					<ribbon:RibbonTextBox Name="SvArea" Label="ｴﾘｱ情報" HorizontalContentAlignment="Right" FontWeight="Medium" FontSize="13" />
                </ribbon:RibbonGroup>
            </ribbon:RibbonTab>
            <ribbon:RibbonTab x:Name="visionTab" Header="画像">
                <ribbon:RibbonGroup x:Name="CamGrp" Header="カメラ操作">
                    <ribbon:RibbonButton x:Name="camInitBtn" SmallImageSource="Images\SmallIcon.png" Label="初期化" Command="{Binding Path=CmdInitCamera}" />
                    <ribbon:RibbonToggleButton x:Name="grabBtn" SmallImageSource="Images\SmallGrab.png" Label="連続取り込み" IsChecked="{Binding Path=GrabStatus}"  Command="{Binding Path=CmdGrabCamera}" CommandParameter="{Binding ElementName=grabBtn}" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup x:Name="Vision" Header="画像処理">
                    <ribbon:RibbonComboBox Name="VisionType" Label="ﾃﾝﾌﾟﾚｰﾄ:">
						<ribbon:RibbonGallery Name="tplGallery" DataContext="{x:Static data:WordModel.ImageTemplateGalleryData}"
												  ItemsSource="{Binding CategoryDataCollection}"
												  ScrollViewer.VerticalScrollBarVisibility="Hidden">
							<ribbon:RibbonGallery.CategoryTemplate>
								<HierarchicalDataTemplate ItemsSource="{Binding GalleryItemDataCollection}">
									<Border Background="LightGray">
										<TextBlock Text="{Binding}" FontWeight="Bold" />
									</Border>
									<HierarchicalDataTemplate.ItemTemplate>
										<DataTemplate DataType="data:WordModel.TplImageData">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition />
												</Grid.ColumnDefinitions>
												<Border BorderThickness="1" BorderBrush="Black">
													<Image Source="{Binding Field1}" />
												</Border>
												<StackPanel Grid.Column="1" Margin="15,0,0,0">
													<TextBlock Text="{Binding Label}" />
												</StackPanel>
											</Grid>
										</DataTemplate>
									</HierarchicalDataTemplate.ItemTemplate>
								</HierarchicalDataTemplate>
							</ribbon:RibbonGallery.CategoryTemplate>
						</ribbon:RibbonGallery>

						<!-- 単純にﾌｧｲﾙ一覧をｷﾞｬﾗﾘｰに追加する場合
                        <ribbon:RibbonGallery Name="tplGallery" >
							<ribbon:RibbonGalleryCategory Header="ﾃﾝﾌﾟﾚｰﾄ" ItemsSource="{Binding TplFiles}"/>
                        </ribbon:RibbonGallery>
						-->
                    </ribbon:RibbonComboBox>
					<ribbon:RibbonButton Name="visionRun" DataContext="{x:Static data:WordModel.VisionProc}" />
					<ribbon:RibbonToggleButton Name="Imaging" DataContext="{x:Static data:WordModel.Imaging}" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup x:Name="DrawCamView" Header="描画ﾂｰﾙ">
					<ribbon:RibbonToggleButton x:Name="centerBtn" SmallImageSource="Images\SmallIcon.png" Label="中心線" Command="{Binding Path=CmdDrawCenter}" CommandParameter="{Binding ElementName=centerBtn}" />
                </ribbon:RibbonGroup>
            </ribbon:RibbonTab>
            <ribbon:RibbonTab x:Name="ProgramTab" Header="動作ﾌﾟﾛｸﾞﾗﾑ">
                <ribbon:RibbonGroup x:Name="Grp1" Header="ﾌｧｲﾙ" LargeImageSource="Images\Page.png">
                    <ribbon:RibbonButton x:Name="ProgCreateBtn" SmallImageSource="Images\openFile.png" Label="新規作成" Click="ProgCreateBtn_Click"/>
                    <ribbon:RibbonButton x:Name="ProgOpenBtn" SmallImageSource="Images\openHS.png" Label="開く" Click="ProgOpenBtn_Click"/>
                    <ribbon:RibbonButton x:Name="ProgSaveBtn" SmallImageSource="Images\saveHS.png" Label="上書き保存" Click="ProgSaveBtn_Click"/>
                    <ribbon:RibbonButton x:Name="ProgSaveOvBtn" SmallImageSource="Images\saveHS.png" Label="別名で保存" Click="ProgSaveOvBtn_Click"/>
                </ribbon:RibbonGroup>

				<ribbon:RibbonGroup x:Name="Edit" Header="編集">
					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.Cut}" />
					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.Copy}" />
					<ribbon:RibbonButton DataContext="{x:Static data:WordModel.Paste}" />
				</ribbon:RibbonGroup>

				<ribbon:RibbonGroup x:Name="Grp2" Header="実行" LargeImageSource="Images\Page.png">
                    <ribbon:RibbonToggleButton x:Name="ProgExecBtn" SmallImageSource="Images\FormRunHS.png" Label="選択ﾌﾟﾛｸﾞﾗﾑ実行" Click="ProgExecBtn_Click"/>
                    <ribbon:RibbonButton x:Name="ProgStopBtn" SmallImageSource="Images\DeleteHS.png" Label="実行中ﾌﾟﾛｸﾞﾗﾑ中止" Click="ProgStopBtn_Click"/>
					<ribbon:RibbonTextBox x:Name="ProgTimeOut" Label="ﾀｲﾑｱｳﾄ(ms)" Text="0" HorizontalContentAlignment="Right" FontWeight="Medium" FontSize="13" />
                </ribbon:RibbonGroup>
            </ribbon:RibbonTab>
            <ribbon:Ribbon.QuickAccessToolBar>
                <ribbon:RibbonQuickAccessToolBar Width="110">
                    <ribbon:RibbonButton SmallImageSource="Images\SaveHS.png" />
                    <ribbon:RibbonButton SmallImageSource="Images\Edit_UndoHS.png" />
                    <ribbon:RibbonButton SmallImageSource="Images\Edit_RedoHS.png" />
					<ribbon:RibbonButton x:Name="HelpButton" SmallImageSource="Images\Help.png" Click="Help_Click"/>
                </ribbon:RibbonQuickAccessToolBar>
            </ribbon:Ribbon.QuickAccessToolBar>
        </ribbon:Ribbon>
        <Grid Grid.Row="1" Name="grid1" Margin="0,0,0,28" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="553*" />
                <ColumnDefinition Width="13*" />
                <ColumnDefinition Width="222*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="38" />
                <RowDefinition Height="38" />
                <RowDefinition Height="43" />
                <RowDefinition Height="307*" />
                <RowDefinition Height="18*" />
                <RowDefinition Height="107*" />
            </Grid.RowDefinitions>
            <StackPanel Height="38" Name="stackPanel1" VerticalAlignment="Top" Orientation="Horizontal" Background="#FFB9E9F5" Grid.ColumnSpan="3">
                <TextBlock Height="23" Name="textBlock1" Text="入力:" Margin="5,12,5,5" VerticalAlignment="Center" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp01" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked01}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp02" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked02}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp03" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked03}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp04" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked04}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp05" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked05}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp06" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked06}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp07" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked07}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp08" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked08}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp09" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked09}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp10" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked10}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp11" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked11}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp12" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked12}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp13" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked13}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp14" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked14}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp15" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked15}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp16" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked16}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp17" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked17}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp18" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked18}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp19" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked19}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp20" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked20}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp21" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked21}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp22" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked22}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp23" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked23}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp24" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked24}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp25" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked25}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp26" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked26}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp27" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked27}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp28" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked28}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp29" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked29}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp30" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked30}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp31" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked31}" />
                <RadioButton Height="16" IsHitTestVisible="False" IsTabStop="False" Name="ioInp32" Margin="6,4,0,0" IsChecked="{Binding Path=IsChecked32}" />
                <TextBlock Height="23" Name="textBlock4" Text="ｻｰﾎﾞ直交座標:" Margin="5,10,0,0" />
                <TextBox Height="24" Name="posX" Width="80" Margin="7,0,0,0" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" Background="{Binding Path=AxisBackGround0}" ToolTip="{Binding Path=AxisErrMsg0}" />
				<TextBox Height="24" Name="posY" Width="80" Margin="5,0,0,0" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" Background="{Binding Path=AxisBackGround1}" ToolTip="{Binding Path=AxisErrMsg1}" />
				<TextBox Height="24" Name="posZ" Width="80" Margin="5,0,0,0" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" Background="{Binding Path=AxisBackGround2}" ToolTip="{Binding Path=AxisErrMsg2}" />
				<TextBox Height="24" Name="posA" Width="80" Margin="5,0,0,0" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" Background="{Binding Path=AxisBackGround3}" ToolTip="{Binding Path=AxisErrMsg3}" />
				<TextBox Height="24" Name="posB" Width="80" Margin="5,0,0,0" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" Background="{Binding Path=AxisBackGround3}" ToolTip="{Binding Path=AxisErrMsg4}" />
            </StackPanel>
            <StackPanel Grid.Row="1" Height="38" Name="stackPanel2" VerticalAlignment="Top" Orientation="Horizontal" Background="#FFB9E9F5" Grid.ColumnSpan="3">
                <TextBlock Height="23" Name="textBlock2" Text="出力:" Margin="5,12,5,5" VerticalAlignment="Center" />
				<CheckBox Height="16" Name="ioOut01" Margin="5,5,0,0" Click="ioOut01_Click" IsChecked="{Binding Path=IsOut01}" ToolTip="{Binding Path=IoOutInfo01}"/>
				<CheckBox Height="16" Name="ioOut02" Margin="5,5,0,0" Click="ioOut02_Click" IsChecked="{Binding Path=IsOut02}" ToolTip="{Binding Path=IoOutInfo02}"/>
				<CheckBox Height="16" Name="ioOut03" Margin="5,5,0,0" Click="ioOut03_Click" IsChecked="{Binding Path=IsOut03}" ToolTip="{Binding Path=IoOutInfo03}"/>
				<CheckBox Height="16" Name="ioOut04" Margin="5,5,0,0" Click="ioOut04_Click" IsChecked="{Binding Path=IsOut04}" ToolTip="{Binding Path=IoOutInfo04}"/>
				<CheckBox Height="16" Name="ioOut05" Margin="5,5,0,0" Click="ioOut05_Click" IsChecked="{Binding Path=IsOut05}" ToolTip="{Binding Path=IoOutInfo05}"/>
				<CheckBox Height="16" Name="ioOut06" Margin="5,5,0,0" Click="ioOut06_Click" IsChecked="{Binding Path=IsOut06}" ToolTip="{Binding Path=IoOutInfo06}"/>
				<CheckBox Height="16" Name="ioOut07" Margin="5,5,0,0" Click="ioOut07_Click" IsChecked="{Binding Path=IsOut07}" ToolTip="{Binding Path=IoOutInfo07}"/>
				<CheckBox Height="16" Name="ioOut08" Margin="5,5,0,0" Click="ioOut08_Click" IsChecked="{Binding Path=IsOut08}" ToolTip="{Binding Path=IoOutInfo08}"/>
				<CheckBox Height="16" Name="ioOut09" Margin="5,5,0,0" Click="ioOut09_Click" IsChecked="{Binding Path=IsOut09}" ToolTip="{Binding Path=IoOutInfo09}"/>
				<CheckBox Height="16" Name="ioOut10" Margin="5,5,0,0" Click="ioOut10_Click" IsChecked="{Binding Path=IsOut10}" ToolTip="{Binding Path=IoOutInfo10}"/>
				<CheckBox Height="16" Name="ioOut11" Margin="5,5,0,0" Click="ioOut11_Click" IsChecked="{Binding Path=IsOut11}" ToolTip="{Binding Path=IoOutInfo11}"/>
				<CheckBox Height="16" Name="ioOut12" Margin="5,5,0,0" Click="ioOut12_Click" IsChecked="{Binding Path=IsOut12}" ToolTip="{Binding Path=IoOutInfo12}"/>
				<CheckBox Height="16" Name="ioOut13" Margin="5,5,0,0" Click="ioOut13_Click" IsChecked="{Binding Path=IsOut13}" ToolTip="{Binding Path=IoOutInfo13}"/>
				<CheckBox Height="16" Name="ioOut14" Margin="5,5,0,0" Click="ioOut14_Click" IsChecked="{Binding Path=IsOut14}" ToolTip="{Binding Path=IoOutInfo14}"/>
				<CheckBox Height="16" Name="ioOut15" Margin="5,5,0,0" Click="ioOut15_Click" IsChecked="{Binding Path=IsOut15}" ToolTip="{Binding Path=IoOutInfo15}"/>
				<CheckBox Height="16" Name="ioOut16" Margin="5,5,0,0" Click="ioOut16_Click" IsChecked="{Binding Path=IsOut16}" ToolTip="{Binding Path=IoOutInfo16}"/>
				<CheckBox Height="16" Name="ioOut17" Margin="5,5,0,0" Click="ioOut17_Click" IsChecked="{Binding Path=IsOut17}" ToolTip="{Binding Path=IoOutInfo17}"/>
				<CheckBox Height="16" Name="ioOut18" Margin="5,5,0,0" Click="ioOut18_Click" IsChecked="{Binding Path=IsOut18}" ToolTip="{Binding Path=IoOutInfo18}"/>
				<CheckBox Height="16" Name="ioOut19" Margin="5,5,0,0" Click="ioOut19_Click" IsChecked="{Binding Path=IsOut19}" ToolTip="{Binding Path=IoOutInfo19}"/>
				<CheckBox Height="16" Name="ioOut20" Margin="5,5,0,0" Click="ioOut20_Click" IsChecked="{Binding Path=IsOut20}" ToolTip="{Binding Path=IoOutInfo20}"/>
				<CheckBox Height="16" Name="ioOut21" Margin="5,5,0,0" Click="ioOut21_Click" IsChecked="{Binding Path=IsOut21}" ToolTip="{Binding Path=IoOutInfo21}"/>
				<CheckBox Height="16" Name="ioOut22" Margin="5,5,0,0" Click="ioOut22_Click" IsChecked="{Binding Path=IsOut22}" ToolTip="{Binding Path=IoOutInfo22}" />
				<CheckBox Height="16" Name="ioOut23" Margin="5,5,0,0" Click="ioOut23_Click" IsChecked="{Binding Path=IsOut23}" ToolTip="{Binding Path=IoOutInfo23}"/>
				<CheckBox Height="16" Name="ioOut24" Margin="5,5,0,0" Click="ioOut24_Click" IsChecked="{Binding Path=IsOut24}" ToolTip="{Binding Path=IoOutInfo24}"/>
				<CheckBox Height="16" Name="ioOut25" Margin="5,5,0,0" Click="ioOut25_Click" IsChecked="{Binding Path=IsOut25}" ToolTip="{Binding Path=IoOutInfo25}"/>
				<CheckBox Height="16" Name="ioOut26" Margin="5,5,0,0" Click="ioOut26_Click" IsChecked="{Binding Path=IsOut26}" ToolTip="{Binding Path=IoOutInfo26}"/>
				<CheckBox Height="16" Name="ioOut27" Margin="5,5,0,0" Click="ioOut27_Click" IsChecked="{Binding Path=IsOut27}" ToolTip="{Binding Path=IoOutInfo27}"/>
				<CheckBox Height="16" Name="ioOut28" Margin="5,5,0,0" Click="ioOut28_Click" IsChecked="{Binding Path=IsOut28}" ToolTip="{Binding Path=IoOutInfo28}"/>
				<CheckBox Height="16" Name="ioOut29" Margin="5,5,0,0" Click="ioOut29_Click" IsChecked="{Binding Path=IsOut29}" ToolTip="{Binding Path=IoOutInfo29}"/>
				<CheckBox Height="16" Name="ioOut30" Margin="5,5,0,0" Click="ioOut30_Click" IsChecked="{Binding Path=IsOut30}" ToolTip="{Binding Path=IoOutInfo30}"/>
				<CheckBox Height="16" Name="ioOut31" Margin="5,5,0,0" Click="ioOut31_Click" IsChecked="{Binding Path=IsOut31}" ToolTip="{Binding Path=IoOutInfo31}"/>
				<CheckBox Height="16" Name="ioOut32" Margin="5,5,0,0" Click="ioOut32_Click" IsChecked="{Binding Path=IsOut32}" ToolTip="{Binding Path=IoOutInfo32}"/>
				<ComboBox Height="23" Name="comboBox1" Width="82" Margin="5,0,0,0" IsReadOnly="True" SelectionChanged="comboBox1_SelectionChanged">
					<ComboBoxItem Content="指令位置" />
					<ComboBoxItem Content="機械位置" />
				</ComboBox>
				<!--
                <TextBlock Height="23" Name="posPh" Text="ｻｰﾎﾞ指令座標:" Margin="5,7,0,0" />
				-->
				
				<TextBox Height="24" Name="Ph_posX" Margin="5,3,0,0" Width="80" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" />
				<TextBox Height="24" Name="Ph_posY" Margin="5,3,0,0" Width="80" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" />
                <TextBox Height="24" Name="Ph_posZ" Margin="5,3,0,0" Width="80" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" />
                <TextBox Height="24" Name="Ph_posA" Margin="5,3,0,0" Width="80" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" />
                <TextBox Height="24" Name="Ph_posB" Margin="5,3,0,0" Width="80" HorizontalContentAlignment="Right" FontSize="14" FontWeight="Bold" IsReadOnly="True" />
            </StackPanel>
            <GridSplitter Grid.Row="4" Name="gridSplitter1" Grid.ColumnSpan="3" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" Style="{StaticResource GridSplitterStyle1}">
                <GridSplitter.Background>
                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                        <GradientStop Color="#FF808385" Offset="0"/>
                        <GradientStop Color="#FFECF1F7" Offset="1"/>
                    </LinearGradientBrush>
                </GridSplitter.Background>
            </GridSplitter>
            <GridSplitter Grid.Row="3" Name="gridSplitter2" HorizontalContentAlignment="Center" Style="{StaticResource GridSplitterStyle2}" Grid.Column="1" HorizontalAlignment="Stretch">
                <GridSplitter.Background>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
                        <GradientStop Color="#FFECF1F7" Offset="0"/>
                        <GradientStop Color="#FF808385" Offset="1"/>
                    </LinearGradientBrush>
                </GridSplitter.Background>
            </GridSplitter>
            <Image Grid.Column="2" Grid.Row="3" Name="cameraImage" Stretch="Fill" />
            <StackPanel Grid.Row="2" Name="stackPanel3" Grid.ColumnSpan="3" Orientation="Horizontal">
                <TextBlock Height="23" Name="textBlock3" Text="動作プログラムファイル" FontWeight="Bold" FontSize="14" Margin="10,0" />
                <TextBox Height="24" Name="progFileName" Width="840" />
                <Button Content="参照" Height="23" Name="progRefBtn" Width="75" Margin="10,0,0,0" Click="progRefBtn_Click" />
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#43745E85" Offset="0" />
                        <GradientStop Color="#FF7C498F" Offset="1" />
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <console:IronPythonConsoleControl Grid.Row="5" Name="pythonConsole" Grid.ColumnSpan="3" Background="#FF3B3838" />
            <my:EditorControl Grid.Row="3" x:Name="editorControl" />
        </Grid>
        <StatusBar Grid.Row="2" Name="Status" VerticalAlignment="Bottom" Height="30"/>
    </Grid>
</ribbon:RibbonWindow>
